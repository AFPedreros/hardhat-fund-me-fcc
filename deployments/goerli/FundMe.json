{
  "address": "0x0332Ff72c7096aB4c3eFe70Ea2020D8D537c9B50",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xecd9e524112c21c1b803b1190b26b56c19ccd64bd9ed691453b89fa0bcb70f16",
  "receipt": {
    "to": null,
    "from": "0xC60DfE60E9BbD8ebd6427DED8D6A83E0f8BE971D",
    "contractAddress": "0x0332Ff72c7096aB4c3eFe70Ea2020D8D537c9B50",
    "transactionIndex": 14,
    "gasUsed": "906844",
    "logsBloom": "0x
    "blockHash": "0xe639bc1325af200412bd3b61bcf927933b187476c6009f7b27228a56334aa4f5",
    "transactionHash": "0xecd9e524112c21c1b803b1190b26b56c19ccd64bd9ed691453b89fa0bcb70f16",
    "logs": [],
    "blockNumber": 7623550,
    "cumulativeGasUsed": "7073716",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 1,
  "solcInputHash": "076590edb58a74f326e6dd3948d2a2fa",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n    AggregatorV3Interface public priceFeed;\\n    \\n    constructor(address _priceFeed) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(_priceFeed);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n    \\n    modifier onlyOwner {\\n        if (msg.sender != i_owner) revert NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n}\\n\\n\\n\",\"keccak256\":\"0xac2482942502b455132f939f9dd090c58fa4cf8289ed1477056a011069190f3e\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    function getPrice(AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\\r\\n            0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\r\\n        );\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        return uint256(answer * 10000000000);\\r\\n    }\\r\\n\\r\\n    function getConversionRate(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x289b2e6b254ed353733b71ed50b97e6ce5c6bfec9c44359849ffb532f223d40f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405162000ff938038062000ff98339818101604052810190610034919061011f565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ec826100c1565b9050919050565b6100fc816100e1565b811461010757600080fd5b50565b600081519050610119816100f3565b92915050565b600060208284031215610135576101346100bc565b5b60006101438482850161010a565b91505092915050565b610e9d806200015c6000396000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e3565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107d5565b610525565b6040516100d8919061081b565b60405180910390f35b3480156100ed57600080fd5b506100f661053d565b604051610103919061081b565b60405180910390f35b34801561011857600080fd5b5061012161054a565b60405161012e9190610895565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610156610570565b60405161016391906108bf565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e9190610906565b610596565b6040516101a091906108bf565b60405180910390f35b6802b5e3af16b18800006101e8600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105d590919063ffffffff16565b1015610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610990565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027791906109df565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461036a576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610415576000600182815481106103905761038f610a35565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040d90610a64565b91505061036d565b50600067ffffffffffffffff81111561043157610430610aad565b5b60405190808252806020026020018201604052801561045f5781602001602082028036833780820191505090505b50600190805190602001906104759291906106cb565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049c90610b0d565b60006040518083038185875af1925050503d80600081146104d9576040519150601f19603f3d011682016040523d82523d6000602084013e6104de565b606091505b5050905080610522576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051990610b6e565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600181815481106105a657600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105e183610611565b90506000670de0b6b3a764000085836105fa9190610b8e565b6106049190610c17565b9050809250505092915050565b60008073d4a33860578de61dbabdc8bfdb98fd742fa7028e905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561067357600080fd5b505afa158015610687573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ab9190610cd5565b5050509150506402540be400816106c29190610d50565b92505050919050565b828054828255906000526020600020908101928215610744579160200282015b828111156107435782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106eb565b5b5090506107519190610755565b5090565b5b8082111561076e576000816000905550600101610756565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107a282610777565b9050919050565b6107b281610797565b81146107bd57600080fd5b50565b6000813590506107cf816107a9565b92915050565b6000602082840312156107eb576107ea610772565b5b60006107f9848285016107c0565b91505092915050565b6000819050919050565b61081581610802565b82525050565b6000602082019050610830600083018461080c565b92915050565b6000819050919050565b600061085b61085661085184610777565b610836565b610777565b9050919050565b600061086d82610840565b9050919050565b600061087f82610862565b9050919050565b61088f81610874565b82525050565b60006020820190506108aa6000830184610886565b92915050565b6108b981610797565b82525050565b60006020820190506108d460008301846108b0565b92915050565b6108e381610802565b81146108ee57600080fd5b50565b600081359050610900816108da565b92915050565b60006020828403121561091c5761091b610772565b5b600061092a848285016108f1565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b600061097a601b83610933565b915061098582610944565b602082019050919050565b600060208201905081810360008301526109a98161096d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ea82610802565b91506109f583610802565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a2a57610a296109b0565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a6f82610802565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610aa257610aa16109b0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610af7600083610adc565b9150610b0282610ae7565b600082019050919050565b6000610b1882610aea565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b58600b83610933565b9150610b6382610b22565b602082019050919050565b60006020820190508181036000830152610b8781610b4b565b9050919050565b6000610b9982610802565b9150610ba483610802565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bdd57610bdc6109b0565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c2282610802565b9150610c2d83610802565b925082610c3d57610c3c610be8565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c6781610c48565b8114610c7257600080fd5b50565b600081519050610c8481610c5e565b92915050565b6000819050919050565b610c9d81610c8a565b8114610ca857600080fd5b50565b600081519050610cba81610c94565b92915050565b600081519050610ccf816108da565b92915050565b600080600080600060a08688031215610cf157610cf0610772565b5b6000610cff88828901610c75565b9550506020610d1088828901610cab565b9450506040610d2188828901610cc0565b9350506060610d3288828901610cc0565b9250506080610d4388828901610c75565b9150509295509295909350565b6000610d5b82610c8a565b9150610d6683610c8a565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610da557610da46109b0565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610de257610de16109b0565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e1f57610e1e6109b0565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e5c57610e5b6109b0565b5b82820290509291505056fea2646970667358221220b38e5d765939f4165464df24a59fb616e64f3f7bbb56e0b28f5300224ea9b81d64736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e3565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107d5565b610525565b6040516100d8919061081b565b60405180910390f35b3480156100ed57600080fd5b506100f661053d565b604051610103919061081b565b60405180910390f35b34801561011857600080fd5b5061012161054a565b60405161012e9190610895565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610156610570565b60405161016391906108bf565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e9190610906565b610596565b6040516101a091906108bf565b60405180910390f35b6802b5e3af16b18800006101e8600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105d590919063ffffffff16565b1015610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610990565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027791906109df565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461036a576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610415576000600182815481106103905761038f610a35565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040d90610a64565b91505061036d565b50600067ffffffffffffffff81111561043157610430610aad565b5b60405190808252806020026020018201604052801561045f5781602001602082028036833780820191505090505b50600190805190602001906104759291906106cb565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049c90610b0d565b60006040518083038185875af1925050503d80600081146104d9576040519150601f19603f3d011682016040523d82523d6000602084013e6104de565b606091505b5050905080610522576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051990610b6e565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600181815481106105a657600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105e183610611565b90506000670de0b6b3a764000085836105fa9190610b8e565b6106049190610c17565b9050809250505092915050565b60008073d4a33860578de61dbabdc8bfdb98fd742fa7028e905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561067357600080fd5b505afa158015610687573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ab9190610cd5565b5050509150506402540be400816106c29190610d50565b92505050919050565b828054828255906000526020600020908101928215610744579160200282015b828111156107435782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106eb565b5b5090506107519190610755565b5090565b5b8082111561076e576000816000905550600101610756565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107a282610777565b9050919050565b6107b281610797565b81146107bd57600080fd5b50565b6000813590506107cf816107a9565b92915050565b6000602082840312156107eb576107ea610772565b5b60006107f9848285016107c0565b91505092915050565b6000819050919050565b61081581610802565b82525050565b6000602082019050610830600083018461080c565b92915050565b6000819050919050565b600061085b61085661085184610777565b610836565b610777565b9050919050565b600061086d82610840565b9050919050565b600061087f82610862565b9050919050565b61088f81610874565b82525050565b60006020820190506108aa6000830184610886565b92915050565b6108b981610797565b82525050565b60006020820190506108d460008301846108b0565b92915050565b6108e381610802565b81146108ee57600080fd5b50565b600081359050610900816108da565b92915050565b60006020828403121561091c5761091b610772565b5b600061092a848285016108f1565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b600061097a601b83610933565b915061098582610944565b602082019050919050565b600060208201905081810360008301526109a98161096d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ea82610802565b91506109f583610802565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a2a57610a296109b0565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a6f82610802565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610aa257610aa16109b0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610af7600083610adc565b9150610b0282610ae7565b600082019050919050565b6000610b1882610aea565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b58600b83610933565b9150610b6382610b22565b602082019050919050565b60006020820190508181036000830152610b8781610b4b565b9050919050565b6000610b9982610802565b9150610ba483610802565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bdd57610bdc6109b0565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c2282610802565b9150610c2d83610802565b925082610c3d57610c3c610be8565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c6781610c48565b8114610c7257600080fd5b50565b600081519050610c8481610c5e565b92915050565b6000819050919050565b610c9d81610c8a565b8114610ca857600080fd5b50565b600081519050610cba81610c94565b92915050565b600081519050610ccf816108da565b92915050565b600080600080600060a08688031215610cf157610cf0610772565b5b6000610cff88828901610c75565b9550506020610d1088828901610cab565b9450506040610d2188828901610cc0565b9350506060610d3288828901610cc0565b9250506080610d4388828901610c75565b9150509295509295909350565b6000610d5b82610c8a565b9150610d6683610c8a565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610da557610da46109b0565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610de257610de16109b0565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e1f57610e1e6109b0565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e5c57610e5b6109b0565b5b82820290509291505056fea2646970667358221220b38e5d765939f4165464df24a59fb616e64f3f7bbb56e0b28f5300224ea9b81d64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}